WHITESPACE = _{ " " | "\t" }
COMMENT = _{ "#" ~ (!NEWLINE ~ ANY)* }

file = { SOI ~ (statement? ~ NEWLINE)* ~ EOI }
statement = { define | capability | position | property | pixelmap | animdef | animframe | mapping }

string = { ("\"" ~ (!"\"" ~ ANY)* ~ "\"") | ("'" ~ (!"'" ~ ANY)* ~ "'") }
reserved = _{ "\"" | ":" | "," | ";" | "[" | "]" | "(" | ")"  }
char = @{ !(WHITESPACE | reserved) ~ ANY }
name_char = @{ LETTER | NUMBER | CONNECTOR_PUNCTUATION }

name = @{ name_char+ }
word = @{ char+ }
value = @{ string | word }

number = @{ "0x" ~ ASCII_HEX_DIGIT+ | NUMBER+ } 
id = _{ string | number }

id_with_state = _{ id ~ state? }
range = { id_with_state ~ ("-" ~ id_with_state)? }
ids = { range ~ ("," ~ range)* }
index = _{ "[" ~ ids ~ "]" }

time = { NUMBER ~ ("s" | "ms" | "us") }

state = { "(" ~ kvmap ~ ")" }
//key_state = { "P" | "UP" | "UR" | "R" | "H" | "O" }
on_state = { "A" | "On" | "D" | "Off" }
layer_type = { "LayerShift" | "LayerLatch" | "LayerLock" | "Layer" }
charcode = { ("'" | "u'") ~ (!"'" ~ ANY) ~ "'" }
pixel = { "P" ~ (index | id) }
pixellayer = _{ "PL" ~ (index | id) }
scancode = { "S" ~ (index | id) }
unicode = { "U+" ~ value  }
unistr = { "u" ~ string }
usbcode = { "U" ~ (index | id) }
consumer = { "CONS" ~ (index | id) }
system = { "SYS" ~ (index | id) }
indicator = { "I" ~ (index | id) }
layer = { layer_type ~ index }
trig = { "T[" ~ number ~ "," ~ number ~ "]" }
none = { "None" }
key = { scancode | charcode | usbcode }

kv = { word ~ (":" ~ word)? }
kvmap = { kv ~ ("," ~ kv)* }

array = { name ~ "[" ~ number? ~ "]" }
function = { name ~ "(" ~ kvmap? ~ ")" }

rhs = { value  ~ value* }
lhs = _{ array | name | string }
property = { lhs ~ "=" ~ rhs ~ ";" }
define = { name ~ "=>" ~ value ~ ";" }
capability = { name ~ "=>" ~ function ~ ";" }
position = { (scancode | pixel) ~ "<=" ~ kvmap ~ ";" }

key_trigger = { key ~ ("(" ~ kvmap ~ ")") | key }
indicator_trigger = { indicator ~  ("(" ~ on_state ~ ")") | indicator }
layer_trigger = { layer ~ ("(" ~ on_state ~ ")") | layer }
generic_trigger = { trig ~ ("(" ~ kvmap ~ ")") | trig }

trigger = { key_trigger | layer_trigger | indicator_trigger | generic_trigger | animation }
trigger_group = _{ trigger ~ ("+" ~ trigger)* }
triggers = { trigger_group ~ ("," ~ trigger_group)* }



result = { charcode | unicode | unistr | key_trigger | usbcode | consumer | system | generic_trigger | layer_trigger | function | pixelval | animation_result | string | none }
result_group = _{ result ~ ("+" ~ result)* }
results = _{ result_group ~ ("," ~ result_group)* }


binding = { "::" | ":+" | ":-" | ":" | "i::" | "i:+" | "i:-" | "i:" }
mapping = { triggers ~ binding ~ results ~ ";" }

pixeldef = _{ (pixellayer | pixel) ~ "(" ~ kvmap ~ ")" }
pixelmap = { pixeldef ~ ":" ~ (scancode | none) ~ ";" }

animation = _{ ("A" ~ string) | ("A[" ~ name ~ "]") }
animation_result = _{ animation	~ ("(" ~ kvmap? ~ ")")? }
animdef = { animation ~ "<=" ~ kvmap ~ ";" }

op = { "+:" | "-:" | "+" | "-" | "<<" | ">>" }
channel = { op? ~ number }
channels = _{ channel ~ ("," ~ channel)* }

pixelindex = _{ ("PL"|"P") ~ "[" ~ kvmap ~ "]" }
pixelval = { (pixelindex | scancode | usbcode) ~ "(" ~ channels ~ ")" }
pixelvals = _{ pixelval ~ ("," ~ pixelval)* }

frame = _{ "A[" ~ name ~ "," ~ ids ~ "]" }
animframe = { frame ~ "<=" ~ pixelvals ~ ";" }

